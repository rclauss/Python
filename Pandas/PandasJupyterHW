{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "main_data = pd.read_csv(\"purchase_data.csv\")\n",
    "\n",
    "\n",
    "# Player Count\n",
    "total_players_length = len(main_data[\"SN\"].value_counts())\n",
    "\n",
    "player_count = pd.DataFrame({\"Total Players\":[total_players_length]})\n",
    "\n",
    "\n",
    "\n",
    "#Unique Items\n",
    "unique_items = len(main_data[\"Item Name\"].unique())\n",
    "\n",
    "#Avg Pruchase Price\n",
    "avg_purchase_price = round(np.mean(main_data[\"Price\"]),3)\n",
    "\n",
    "\n",
    "#Total Num of Purchaes\n",
    "total_num_purchases = len(main_data)\n",
    "\n",
    "#Total REvenue\n",
    "total_revenue = round(sum(main_data[\"Price\"]),2)\n",
    "\n",
    "\n",
    "summary_df = pd.DataFrame({\"Number of Unique Items\":[unique_items],\n",
    "                           \"Average Price\":[avg_purchase_price], \n",
    "                           \"Number of Purchases\": [total_num_purchases], \n",
    "                           \"Total Revenue\": [total_revenue]})\n",
    "\n",
    "\n",
    "\n",
    "#Percentage of Male Players\n",
    "grouped_gender = main_data.groupby(\"Gender\")\n",
    "count_by_gender = grouped_gender.nunique()[\"SN\"]\n",
    "\n",
    "percentage_players = count_by_gender / total_players_length * 100\n",
    "\n",
    "\n",
    "\n",
    "male_count = count_by_gender[1]\n",
    "male_percent = round((male_count / count_by_gender.sum()) * 100,3)\n",
    "\n",
    "female_count = count_by_gender[0]\n",
    "female_percent = round((female_count / count_by_gender.sum()) * 100,3)\n",
    "\n",
    "other_count = count_by_gender[2]\n",
    "other_percent = round((other_count / count_by_gender.sum()) * 100,3)\n",
    "\n",
    "gender_demographics = pd.DataFrame({\"Percentage of Players\": percentage_players, \"Total Count\": count_by_gender})\n",
    "\n",
    "gender_demographics.index.name = None\n",
    "\n",
    "\n",
    "purch_by_gender = grouped_gender[\"Purchase ID\"].count()\n",
    "avg_purch_by_gender = grouped_gender[\"Price\"].mean()\n",
    "total_purch_by_gender = grouped_gender[\"Price\"].sum()\n",
    "\n",
    "avg_purch_per_person = total_purch_by_gender / count_by_gender\n",
    "\n",
    "\n",
    "\n",
    "gender_demographics = pd.DataFrame({\"Purchase Count\": purch_by_gender, \n",
    "                                    \"Average Purchase Price\": avg_purch_by_gender,\n",
    "                                    \"Average Purchase Value\":total_purch_by_gender,\n",
    "                                    \"Avg Purchase Total per Person\": avg_purch_per_person})\n",
    "\n",
    "\n",
    "gender_demographics.index.name = \"Gender\"\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "age_bins = [0, 9.90, 14.99, 19.99, 24.99, 29.99, 34.99, 39.99, 150]\n",
    "group_names = [\"<10\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40+\"]\n",
    "\n",
    "\n",
    "main_data[\"Age Grouping\"] = pd.cut(main_data[\"Age\"],age_bins, labels=group_names)\n",
    "\n",
    "by_age = main_data.groupby(\"Age Grouping\")\n",
    "\n",
    "total_count_age = by_age[\"SN\"].nunique()\n",
    "\n",
    "\n",
    "percentage_by_age = (total_count_age/total_players_length) * 100\n",
    "\n",
    "\n",
    "\n",
    "purch_count_age = by_age[\"Purchase ID\"].count()\n",
    "\n",
    "\n",
    "avg_purch_price_age = by_age[\"Price\"].mean()\n",
    "\n",
    "\n",
    "total_purchase_value = by_age[\"Price\"].sum()\n",
    "\n",
    "\n",
    "avg_purchase_per_person_age = total_purchase_value/total_count_age\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "by_spender = main_data.groupby(\"SN\")\n",
    "\n",
    "\n",
    "purchase_count_spender = by_spender[\"Purchase ID\"].count()\n",
    "\n",
    "# Calculate the average purchase by name \n",
    "avg_purchase_price_spender = by_spender[\"Price\"].mean()\n",
    "\n",
    "# Calculate purchase total \n",
    "purchase_total_spender = by_spender[\"Price\"].sum()\n",
    "\n",
    "\n",
    "by_item = main_data[[\"Item ID\", \"Item Name\", \"Price\"]]\n",
    "\n",
    "\n",
    "item_stats = by_item.groupby([\"Item ID\",\"Item Name\"])\n",
    "\n",
    "\n",
    "purchase_count_item = item_stats[\"Price\"].count()\n",
    "\n",
    "purchase_value = (item_stats[\"Price\"].sum()) \n",
    "\n",
    "\n",
    "item_price = purchase_value/purchase_count_item\n",
    "\n",
    "\n",
    "most_popular_items = pd.DataFrame({\"Purchase Count\": purchase_count_item, \n",
    "                                   \"Item Price\": item_price,\n",
    "                                   \"Total Purchase Value\":purchase_value})\n",
    "\n",
    "\n",
    "\n",
    "popular_formatted = most_popular_items.sort_values([\"Total Purchase Value\"],\n",
    "                                                   ascending=False).head()\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
